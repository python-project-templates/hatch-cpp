[build-system]
requires = ["hatchling>=1.20"]
build-backend = "hatchling.build"

[project]
name = "hatch-cpp"
authors = [{name = "the hatch-cpp authors", email = "t.paine154@gmail.com"}]
description = "Hatch plugin for C++ builds"
readme = "README.md"
license = { text = "Apache-2.0" }
version = "0.1.8"
requires-python = ">=3.9"
keywords = [
    "hatch",
    "python",
    "build",
    "cpp",
    "c++",
    "cmake",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]

dependencies = [
    "hatchling>=1.20",
    "pydantic",
]

[project.optional-dependencies]
develop = [
    "build",
    "bump-my-version",
    "check-manifest",
    "codespell>=2.4,<2.5",
    "hatchling",
    "hatch-build",
    "mdformat>=0.7.22,<1.1",
    "mdformat-tables>=1",
    "pytest",
    "pytest-cov",
    "ruff>=0.9,<0.15",
    "twine",
    "uv",
    "wheel",
    # test
    "nanobind<2.10.0",  # https://github.com/wjakob/nanobind/commit/abd27e3b5565bc95f5091321f0f863fce8b5b95b
    "pybind11",
    "pytest",
    "pytest-cov",
    "toml",
]

[project.entry-points.hatch]
cpp = "hatch_cpp.hooks"

# [project.scripts]
# hatch-cpp = "hatch_cpp.cli:main"

[project.urls]
Repository = "https://github.com/python-project-templates/hatch-cpp"
Homepage = "https://github.com/python-project-templates/hatch-cpp"

[tool.bumpversion]
current_version = "0.1.8"
commit = true
tag = false
commit_args = "-s"

[[tool.bumpversion.files]]
filename = "hatch_cpp/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[tool.check-manifest]
ignore = [
    ".copier-answers.yaml",
    "Makefile",
    "docs/**/*",
]

[tool.coverage.run]
branch = false
omit = [
    "hatch_cpp/tests/integration/",
]
[tool.coverage.report]
exclude_also = [
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
fail_under = 50

[tool.hatch.build]
artifacts = []

[tool.hatch.build.sources]
src = "/"

[tool.hatch.build.targets.sdist]
packages = ["hatch_cpp"]

[tool.hatch.build.targets.wheel]
packages = ["hatch_cpp"]

[tool.pytest.ini_options]
addopts = ["-vvv", "--junitxml=junit.xml"]
testpaths = "hatch_cpp/tests"

[tool.ruff]
line-length = 150

[tool.ruff.lint]
extend-select = ["I"]

[tool.ruff.lint.isort]
combine-as-imports = true
default-section = "third-party"
known-first-party = ["hatch_cpp"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
